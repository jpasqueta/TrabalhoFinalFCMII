remote_driver <- rsDriver(
browser = "firefox",
port = 10,
verbose = FALSE,
chromever = NULL # necessário
)
remote_driver <- rsDriver(
browser = "firefox",
port = 12345,
verbose = FALSE,
chromever = NULL # necessário
)
remote_driver <- rsDriver(
browser = "firefox",
port = as.integer(1000),
verbose = FALSE,
chromever = NULL # necessário
)
library(RSelenium)
library(wdman)
library(netstat)
library(tidyverse)
library(rvest)
wpage <- "https://emec.mec.gov.br"
maxpages <- 13
selenium()
selenium(retcommand = TRUE, check = TRUE)
selenium(retcommand = TRUE, check = TRUE)
remote_driver <- rsDriver(
browser = "firefox",
port = as.integer(1000),
verbose = FALSE,
chromever = NULL # necessário
)
shell('docker pull selenium/standalone-firefox')
shell('docker run -d -p 4445:4444 selenium/standalone-firefox')
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4445L, browserName = "firefox'")
library(RSelenium)
library(wdman)
library(netstat)
library(tidyverse)
library(rvest)
wpage <- "https://emec.mec.gov.br"
maxpages <- 13
selenium(retcommand = TRUE, check = TRUE)
library(RSelenium)
library(wdman)
library(netstat)
library(tidyverse)
library(rvest)
wpage <- "https://emec.mec.gov.br"
maxpages <- 13
selenium(retcommand = TRUE, check = TRUE)
library(RSelenium)
library(wdman)
library(netstat)
library(tidyverse)
library(rvest)
wpage <- "https://emec.mec.gov.br"
maxpages <- 13
selenium(retcommand = TRUE, check = TRUE)
remote_driver <- rsDriver(
browser = "firefox",
port = free_port(),
verbose = FALSE,
chromever = NULL # necessário
)
library(RSelenium)
library(wdman)
library(netstat)
library(tidyverse)
library(rvest)
wpage <- "https://emec.mec.gov.br"
maxpages <- 13
selenium()
selenium(retcommand = TRUE, check = TRUE)
remote_driver <- rsDriver(
browser = "firefox",
port = free_port(),
verbose = FALSE,
chromever = NULL # necessário
)
library(RSelenium)
library(wdman)
library(netstat)
library(tidyverse)
library(rvest)
wpage <- "https://emec.mec.gov.br"
maxpages <- 13
selenium()
selenium(retcommand = TRUE, check = TRUE)
library(RSelenium)
library(wdman)
library(netstat)
library(tidyverse)
library(rvest)
wpage <- "https://emec.mec.gov.br"
maxpages <- 13
selenium()
library(RSelenium)
library(wdman)
library(netstat)
library(tidyverse)
library(rvest)
wpage <- "https://emec.mec.gov.br"
maxpages <- 13
selenium()
selenium(retcommand = TRUE, check = TRUE)
remote_driver <- rsDriver(
browser = "firefox",
port = free_port(),
verbose = FALSE,
chromever = NULL # necessário
)
shell('docker pull selenium/standalone-firefox')
library(RSelenium)
library(wdman)
library(netstat)
library(tidyverse)
library(rvest)
wpage <- "https://emec.mec.gov.br"
maxpages <- 13
selenium()
library(RSelenium)
library(wdman)
library(netstat)
library(tidyverse)
library(rvest)
wpage <- "https://emec.mec.gov.br"
maxpages <- 13
selenium()
selenium(retcommand = TRUE, check = TRUE)
library(RSelenium)
library(wdman)
library(netstat)
library(tidyverse)
library(rvest)
wpage <- "https://emec.mec.gov.br"
maxpages <- 13
selenium()
selenium(retcommand = TRUE, check = TRUE)
remote_driver <- rsDriver(
browser = "firefox",
port = free_port(),
verbose = FALSE,
chromever = NULL # necessário
)
shell('docker pull selenium/standalone-firefox')
library(RSelenium)
library(wdman)
library(netstat)
library(tidyverse)
library(rvest)
wpage <- "https://emec.mec.gov.br"
maxpages <- 13
selenium()
selenium(retcommand = TRUE, check = TRUE)
remote_driver <- rsDriver(
browser = "firefox",
port = free_port(),
verbose = FALSE,
chromever = NULL # necessário
)
remote_driver <- rsDriver(
browser = "firefox",
port = free_port(),
verbose = FALSE,
chromever = NULL # necessário
)
library(RSelenium)
library(wdman)
library(netstat)
library(tidyverse)
library(rvest)
wpage <- "https://emec.mec.gov.br"
maxpages <- 13
selenium()
selenium(retcommand = TRUE, check = TRUE)
selenium(retcommand = TRUE, check = TRUE)
shell('docker run -d -p 4445:4444 selenium/standalone-firefox')
shell('docker run -d -p 4445:4444 selenium/standalone-firefox')
remote_driver <- rsDriver(
browser = "firefox",
port = 4445L,
verbose = FALSE,
chromever = NULL # necessário
)
shell('docker run -d -p 4445:4444 selenium/standalone-firefox')
remote_driver <- rsDriver(
browser = "firefox",
port = 4445L,
verbose = FALSE,
chromever = NULL # necessário
)
remDr <- remote_driver$client
remDr$navigate(wpage)
Sys.sleep(15)
remote_driver <- rsDriver(
browser = "firefox",
port = 4445L,
verbose = FALSE,
chromever = NULL # necessário
)
remDr <- remote_driver$client
remDr$navigate(wpage)
library(RSelenium)
library(wdman)
library(netstat)
library(tidyverse)
library(rvest)
wpage <- "https://emec.mec.gov.br"
maxpages <- 13
selenium()
selenium(retcommand = TRUE, check = TRUE)
remote_driver <- rsDriver(
browser = "firefox",
port = free_port(),
verbose = FALSE,
chromever = NULL # necessário
)
shell('docker run -d -p 4445:4444 selenium/standalone-firefox')
remote_driver <- rsDriver(
browser = "firefox",
port = 4445L,
verbose = FALSE,
chromever = NULL # necessário
)
library(RSelenium)
library(wdman)
library(netstat)
library(tidyverse)
library(rvest)
wpage <- "https://emec.mec.gov.br"
maxpages <- 13
selenium()
selenium(retcommand = TRUE, check = TRUE)
remote_driver <- rsDriver(
browser = "firefox",
port = free_port(),
verbose = FALSE,
chromever = NULL # necessário
)
shell('docker run -d -p 4445:4444 selenium/standalone-firefox')
shell('docker run -d -p 4445:4444 selenium/standalone-firefox')
library(RSelenium)
library(wdman)
library(netstat)
library(tidyverse)
library(rvest)
wpage <- "https://emec.mec.gov.br"
maxpages <- 13
selenium()
selenium(retcommand = TRUE, check = TRUE)
remote_driver <- rsDriver(
browser = "firefox",
port = free_port(),
verbose = FALSE,
chromever = NULL # necessário
)
# Tentativa do stackoverflow
shell('docker run -d -p 4445:4444 selenium/standalone-firefox')
remote_driver <- rsDriver(
browser = "firefox",
port = 4445L,
verbose = FALSE,
chromever = NULL # necessário
)
remDr <- remote_driver$client
remDr$navigate(wpage)
remDr$navigate(https://emec.mec.gov.br)
remDr$navigate(https:emec.mec.gov.br)
library(RSelenium)
library(wdman)
library(netstat)
library(tidyverse)
library(rvest)
wpage <- "https://emec.mec.gov.br"
maxpages <- 13
selenium()
selenium(retcommand = TRUE, check = TRUE)
library(RSelenium)
library(wdman)
library(netstat)
library(tidyverse)
library(rvest)
wpage <- "https://emec.mec.gov.br"
maxpages <- 13
selenium()
selenium(retcommand = TRUE, check = TRUE)
# Tentativa do stackoverflow
shell('docker run -d -p 4445:4444 selenium/standalone-firefox')
remote_driver <- rsDriver(
browser = "firefox",
port = 4445L,
verbose = FALSE,
chromever = NULL # necessário
)
remDr <- remote_driver$client
remDr$navigate(wpage)
library("RPostgreSQL")
library(odbc)
DBI::dbConnect(odbc::odbc(),
Driver = "{PostgreSQL ODBC Driver(ANSI)}",
Database = "AulaPGII",
UserName = 'postgres',
Password = 'aninha185',
Servername = "localhost",
Port = 5432,
encoding = "CP1252",
# Encoding of R sessions, Windows R default is "CP1252" (Windows-1252)
clientcharset = "UTF-8")
library("RPostgreSQL")
library(odbc)
DBI::dbConnect(odbc::odbc(),
Driver = "{PostgreSQL ODBC Driver(ANSI)}",
Database = "AulaPGII",
UserName = senha$V1[1],
Password = senha$V1[2],
Servername = "localhost",
Port = 5433,
encoding = "CP1252",
# Encoding of R sessions, Windows R default is "CP1252" (Windows-1252)
clientcharset = "UTF-8")
DBI::dbConnect(odbc::odbc(),
Driver = "{PostgreSQL ODBC Driver(ANSI)}",
Database = "AulaPGII",
UserName = "postgres",
Password = "aninha185",
Servername = "localhost",
Port = 5433,
encoding = "CP1252",
# Encoding of R sessions, Windows R default is "CP1252" (Windows-1252)
clientcharset = "UTF-8")
read_any <- function(db, table){
tab <- odbc::dbGetQuery(
db, paste0("SELECT * FROM ", table,";")
)
return(tab)
}
read_any(con, "sales.customers")
library("RPostgreSQL")
library(odbc)
library(DBI)
DBI::dbConnect(odbc::odbc(),
Driver = "{PostgreSQL ODBC Driver(ANSI)}",
Database = "AulaPGII",
UserName = senha$V1[1],
Password = senha$V1[2],
Servername = "localhost",
Port = 5433,
encoding = "CP1252",
# Encoding of R sessions, Windows R default is "CP1252" (Windows-1252)
clientcharset = "UTF-8")
DBI::dbConnect(odbc::odbc(),
Driver = "{PostgreSQL ODBC Driver(ANSI)}",
Database = "AulaPGII",
UserName = "postgres",
Password = "aninha185",
Servername = "localhost",
Port = 5433,
encoding = "CP1252",
# Encoding of R sessions, Windows R default is "CP1252" (Windows-1252)
clientcharset = "UTF-8")
shiny::runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
install.packages("leaflet")
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
shiny::runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
# Interface do usuário (UI)
ui <- fluidPage(
titlePanel("Dados de Vacinação por Faixa Etária"),
sidebarLayout(
sidebarPanel(
radioButtons("tipo_vacina", "Selecione o tipo de vacina:",
choices = c("Monovalente", "Bivalente"),
selected = "Monovalente")  # Defina o padrão para "Monovalente"
),
mainPanel(
plotOutput("grafico_barras")  # Gráfico de barras será exibido aqui
)
)
)
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
verificar_cabecalho <- function(caminho_arquivo) {
if (file.exists(caminho_arquivo)) {
head(read.csv(caminho_arquivo))
} else {
return(NULL)
}
}
verificar_cabecalho(caminho_csv_monovalente)
caminho_csv_monovalente <- "../Completas/faixa_etaria_monovalentebtu.csv"
caminho_csv_bivalente <- "../Completas/faixa_etaria_bivalentebtu.csv"
carregar_dados <- function(caminho_arquivo, tipo_vacina) {
if (file.exists(caminho_arquivo)) {
dados <- read.csv(caminho_arquivo, stringsAsFactors = FALSE)
if (tipo_vacina == "Monovalente") {
dados <- dados[, c("Faixa Etaria", "Total de Doses Aplicadas")]
} else {
dados <- dados[, c("Faixa Etaria", "Total de Doses Aplicadas Bivalente")]
}
return(dados)
} else {
return(NULL)
}
}
verificar_cabecalho <- function(caminho_arquivo) {
if (file.exists(caminho_arquivo)) {
head(read.csv(caminho_arquivo))
} else {
return(NULL)
}
}
verificar_cabecalho(caminho_csv_monovalente)
verificar_cabecalho(caminho_csv_bivalente)
file.exists(caminho_csv_monovalente)
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
caminho_csv_monovalente <- "../Completas/faixa_etaria_monovalentebtu.csv"
caminho_csv_monovalente
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
dados
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
dados
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
shiny::runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/ferramentasdemodelagemII/shiny_class')
runApp('C:/Users/aninh/Mestrado/ferramentasdemodelagemII/shiny_class')
runApp('C:/Users/aninh/Mestrado/ferramentasdemodelagemII/shiny_class')
runApp('C:/Users/aninh/Mestrado/ferramentasdemodelagemII/shiny_class')
runApp('C:/Users/aninh/Mestrado/ferramentasdemodelagemII/shiny_class')
runApp('C:/Users/aninh/Mestrado/ferramentasdemodelagemII/shiny_class')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
library(shiny)
library(dplyr)
# Carregar o arquivo de dados
dados <- read.csv("../Completas/sexo_monovalentebtu.csv", sep = ";", stringsAsFactors = FALSE)
dados <- read.csv("../Completas/vacinasbtu.csv", sep = ";", stringsAsFactors = FALSE)
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
shiny::runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
install.packages("shinythemes")
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
shiny::runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
runApp('C:/Users/aninh/Mestrado/Trabalho final - FCMII/teste')
